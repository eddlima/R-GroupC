View(mode_share_bb_base)
View(mode_share_bb_base)
View(base_data)
View(base_person)
library(tidyverse)
library(ggrepel)
library(RColorBrewer)
library(lubridate)
library(stringr)
library(forcats)
base_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
policy_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
policy_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
base_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
policy_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
base_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
library(tidyverse)
library(ggrepel)
library(RColorBrewer)
library(lubridate)
library(stringr)
library(forcats)
#BASE
# Define the URL of the csv.gz file and the destination file path
url <- "https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/tutorial/datascience2024/matsim_outputs/output-1pct/base/berlin-v6.3.output_trips.csv.gz"
destfile <- "berlin-v6.3.base.output_trips.csv.gz"
# Download the file
download.file(url, destfile)
# Get the current working directory (to return later, if needed)
original_dir <- getwd()
# Move to the directory where the file is located
file_dir <- dirname(destfile)
setwd(file_dir)
# Unzip and read the file
base_data <- read_delim(gzfile(basename(destfile)))
sample(base_data)
#POLICY
# Define the URL of the csv.gz file and the destination file path
url <- "https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/tutorial/datascience2024/matsim_outputs/output-1pct/policy/berlin-v6.3.output_trips.csv.gz"
destfile <- "berlin-v6.3.policy.output_trips.csv.gz"
# Download the file
download.file(url, destfile)
# Get the current working directory (to return later, if needed)
original_dir <- getwd()
# Move to the directory where the file is located
file_dir <- dirname(destfile)
setwd(file_dir)
# Unzip and read the file
policy_data <- read_delim(gzfile(basename(destfile)))
base_data_bb <- base_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
policy_data_bb <- policy_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
View(policy_data)
View(policy_data_bb)
View(policy_data_bb)
View(base_data_bb)
View(policy_data_bb)
View(base_data_bb)
base_data_bb <- base_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
mutate(main_mode = str_trim(main_mode))
View(base_data_bb)
View(policy_data_bb)
View(base_data)
mode_base_summary <- base_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(travel_time, na.rm = TRUE), .groups = 'drop')
View(base_data_bb)
mode_base_summary <- base_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(trav_time, na.rm = TRUE), .groups = 'drop')
View(mode_base_summary)
mode_policy_summary <- policy_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(trav_time, na.rm = TRUE), .groups = 'drop')
View(mode_policy_summary)
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary),
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "policy"))
View(mode_summary_combined)
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy"))
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
join_by = "main_mode",
suffix = c("_base", "_policy"))
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy"))
View(mode_base_summary)
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
suffix = c("_base", "_policy"))
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode")
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy"))
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy")) %>%
mutate(main_mode = fct_reorder(main_mode, avg_travel_time_base))
ggplot(mode_summary_combined, aes(x = main_mode, y = avg_travel_time_base, fill = main_mode)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
geom_bar(aes(y = avg_travel_time_policy), stat = "identity", position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_line(aes(y = avg_travel_time_base, group = 1, color = "Base"), size = 1) +
geom_line(aes(y = avg_travel_time_policy, group = 1, color = "Policy"), size = 1, linetype = "dashed") +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)",
color = "Scenario") +
scale_color_manual(values = c("Base" = "blue", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_line(aes(y = avg_travel_time_base, group = 1, color = "Base"), size = 1) +
geom_line(aes(y = avg_travel_time_policy, group = 1, color = "Policy"), size = 1, linetype = "dashed") +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)",
color = "Scenario") +
scale_color_manual(values = c("Base" = "blue", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1))
ggplot(mode_summary_combined, aes(x = main_mode, y = avg_travel_time_base, fill = main_mode)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
geom_bar(aes(y = avg_travel_time_policy), stat = "identity", position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_col(aes(y = avg_travel_time_base, fill = "Base"), position = "dodge", alpha = 0.7) +
geom_col(aes(y = avg_travel_time_policy, fill = "Policy"), position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_manual(values = c("Base" = "blue", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1, angle = 45))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_col(aes(y = avg_travel_time_base, fill = "Base"), position = "dodge", alpha = 0.7) +
geom_col(aes(y = avg_travel_time_policy, fill = "Policy"), position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_manual(values = c("Base" = "orange", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1, angle = 45))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_col(aes(y = avg_travel_time_base, fill = "Base"), position = "dodge", alpha = 0.7) +
geom_col(aes(y = avg_travel_time_policy, fill = "Policy"), position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_manual(values = c("Base" = "blue", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1, angle = 45))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_col(aes(y = avg_travel_time_base, fill = "Base"), position = "dodge", alpha = 0.7) +
geom_col(aes(y = avg_travel_time_policy, fill = "Policy"), position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_manual(values = c("Base" = "pink", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1, angle = 45))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_col(aes(y = avg_travel_time_base, fill = "Base"), position = "dodge", alpha = 0.7) +
geom_col(aes(y = avg_travel_time_policy, fill = "Policy"), position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_manual(values = c("Base" = "violet", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1, angle = 45))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_col(aes(y = avg_travel_time_base, fill = "Base"), position = "dodge", alpha = 0.7) +
geom_col(aes(y = avg_travel_time_policy, fill = "Policy"), position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_manual(values = c("Base" = "green", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1, angle = 45))
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy")) %>%
arrange((avg_travel_time_base))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_col(aes(y = avg_travel_time_base, fill = "Base"), position = "dodge", alpha = 0.7) +
geom_col(aes(y = avg_travel_time_policy, fill = "Policy"), position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_manual(values = c("Base" = "green", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1, angle = 45))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_col(aes(y = avg_travel_time_base, fill = "Base"), position = "dodge", alpha = 0.7) +
geom_col(aes(y = avg_travel_time_policy, fill = "Policy"), position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_manual(values = c("Base" = "blue", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1, angle = 45))
# Comapring travel time
base_data_bb <- base_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
policy_data_bb <- policy_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
library(tidyverse)
library(ggrepel)
library(RColorBrewer)
library(lubridate)
library(stringr)
library(forcats)
#BASE
# Define the URL of the csv.gz file and the destination file path
url <- "https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/tutorial/datascience2024/matsim_outputs/output-1pct/base/berlin-v6.3.output_trips.csv.gz"
destfile <- "berlin-v6.3.base.output_trips.csv.gz"
# Download the file
download.file(url, destfile)
# Get the current working directory (to return later, if needed)
original_dir <- getwd()
# Move to the directory where the file is located
file_dir <- dirname(destfile)
setwd(file_dir)
# Unzip and read the file
base_data <- read_delim(gzfile(basename(destfile)))
sample(base_data)
#POLICY
# Define the URL of the csv.gz file and the destination file path
url <- "https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/tutorial/datascience2024/matsim_outputs/output-1pct/policy/berlin-v6.3.output_trips.csv.gz"
destfile <- "berlin-v6.3.policy.output_trips.csv.gz"
# Download the file
download.file(url, destfile)
# Get the current working directory (to return later, if needed)
original_dir <- getwd()
# Move to the directory where the file is located
file_dir <- dirname(destfile)
setwd(file_dir)
# Unzip and read the file
policy_data <- read_delim(gzfile(basename(destfile)))
base_person <- base_data %>% select(person)
base_person
base_person_berlin <- base_person %>% filter(!grepl("^bb_", person, ignore.case = TRUE))
base_person_berlin
base_person_bb <- base_person %>% filter(grepl("^bb_", person, ignore.case = TRUE))
base_person_bb
fct_count(base_data$main_mode)
mode_share_bb_base <- base_data %>%
select(trip_id, main_mode) %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
count(main_mode) %>%
mutate(share = n / sum(n)) %>%
mutate(scenario = "base") %>%
select(scenario, main_mode, share)
mode_share_bb_policy <- policy_data %>%
select(trip_id, main_mode) %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
count(main_mode) %>%
mutate(share = n / sum(n)) %>%
mutate(scenario = "policy") %>%
select(scenario, main_mode, share)
mode_share_bb_combined <- bind_rows(mode_share_bb_base, mode_share_bb_policy)
ggplot(mode_share_bb_combined, aes(x = main_mode, y = share, fill = scenario)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
labs(title = "Mode Share for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Share of Trips") +
scale_fill_manual(values = c("base" = "blue", "policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1))
# Comapring travel time
base_data_bb <- base_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
policy_data_bb <- policy_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
# Comapring travel time
base_data_bb <- base_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
policy_data_bb <- policy_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
mode_base_summary <- base_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(trav_time, na.rm = TRUE), .ps = 'drop')
mode_policy_summary <- policy_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(trav_time, na.rm = TRUE), .ps = 'drop')
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy")) %>%
arrange((avg_travel_time_base))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_col(aes(y = avg_travel_time_base, fill = "Base"), position = "dodge", alpha = 0.7) +
geom_col(aes(y = avg_travel_time_policy, fill = "Policy"), position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_manual(values = c("Base" = "blue", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1, angle = 45))
View(mode_summary_combined)
library(tidyverse)
library(ggrepel)
library(RColorBrewer)
library(lubridate)
library(stringr)
library(forcats)
#BASE
# Define the URL of the csv.gz file and the destination file path
url <- "https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/tutorial/datascience2024/matsim_outputs/output-1pct/base/berlin-v6.3.output_trips.csv.gz"
destfile <- "berlin-v6.3.base.output_trips.csv.gz"
# Download the file
download.file(url, destfile)
# Get the current working directory (to return later, if needed)
original_dir <- getwd()
# Move to the directory where the file is located
file_dir <- dirname(destfile)
setwd(file_dir)
# Unzip and read the file
base_data <- read_delim(gzfile(basename(destfile)))
sample(base_data)
#POLICY
# Define the URL of the csv.gz file and the destination file path
url <- "https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/tutorial/datascience2024/matsim_outputs/output-1pct/policy/berlin-v6.3.output_trips.csv.gz"
destfile <- "berlin-v6.3.policy.output_trips.csv.gz"
# Download the file
download.file(url, destfile)
# Get the current working directory (to return later, if needed)
original_dir <- getwd()
# Move to the directory where the file is located
file_dir <- dirname(destfile)
setwd(file_dir)
# Unzip and read the file
policy_data <- read_delim(gzfile(basename(destfile)))
base_person <- base_data %>% select(person)
base_person
base_person_berlin <- base_person %>% filter(!grepl("^bb_", person, ignore.case = TRUE))
base_person_berlin
base_person_bb <- base_person %>% filter(grepl("^bb_", person, ignore.case = TRUE))
base_person_bb
fct_count(base_data$main_mode)
mode_share_bb_base <- base_data %>%
select(trip_id, main_mode) %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
count(main_mode) %>%
mutate(share = n / sum(n)) %>%
mutate(scenario = "base") %>%
select(scenario, main_mode, share)
mode_share_bb_policy <- policy_data %>%
select(trip_id, main_mode) %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
count(main_mode) %>%
mutate(share = n / sum(n)) %>%
mutate(scenario = "policy") %>%
select(scenario, main_mode, share)
mode_share_bb_combined <- bind_rows(mode_share_bb_base, mode_share_bb_policy)
ggplot(mode_share_bb_combined, aes(x = main_mode, y = share, fill = scenario)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
labs(title = "Mode Share for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Share of Trips") +
scale_fill_manual(values = c("base" = "blue", "policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1))
# Comapring travel time
base_data_bb <- base_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
policy_data_bb <- policy_data %>% filter(grepl("^bb", trip_id, ignore.case = TRUE))
mode_base_summary <- base_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(trav_time, na.rm = TRUE), .ps = 'drop')
mode_policy_summary <- policy_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(trav_time, na.rm = TRUE), .ps = 'drop')
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy")) %>%
arrange((avg_travel_time_base))
ggplot(mode_summary_combined, aes(x = main_mode)) +
geom_col(aes(y = avg_travel_time_base, fill = "Base"), position = "dodge", alpha = 0.7) +
geom_col(aes(y = avg_travel_time_policy, fill = "Policy"), position = "dodge", alpha = 0.5) +
labs(title = "Average Travel Time for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Average Travel Time (minutes)") +
scale_fill_manual(values = c("Base" = "blue", "Policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1, angle = 45))
View(base_data)
View(base_data_bb)
View(mode_summary_combined)
View(mode_policy_summary)
View(base_data_bb)
View(base_data)
View(mode_policy_summary)
View(mode_summary_combined)
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy")) %>%
arrange((avg_travel_time_base))
View(base_data)
View(base_data)
View(mode_base_summary)
View(mode_share_bb_combined)
View(mode_summary_combined)
fct_count(base_data$main_mode)
# Comparing travel time by main mode
base_data_bb <- base_data %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
mutate(total_trav_time = trav_time + wait_time)
library(tidyverse)
library(ggrepel)
library(RColorBrewer)
library(lubridate)
library(stringr)
library(forcats)
# Comparing travel time by main mode
base_data_bb <- base_data %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
mutate(total_trav_time = trav_time + wait_time)
policy_data_bb <- policy_data %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
mutate(total_trav_time = trav_time + wait_time)
mode_base_summary <- base_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(total_trav_time, na.rm = TRUE), .groups = 'drop')
mode_policy_summary <- policy_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(total_trav_time, na.rm = TRUE), .groups = 'drop')
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy")) %>%
mutate(avg_travel_time_diff = avg_travel_time_policy - avg_travel_time_base)
ggplot(mode_summary_combined, aes(x = main_mode, y = avg_travel_time_diff)) +
geom_col(aes(fill = "Diff"), alpha = 0.7) +
labs(title = "Difference of Average Travel Time for Brandenburg Residents",
x = "Mode of Transportation", y = "Difference of Average Travel Time (seconds) - Policy vs. Base Scenario") +
scale_fill_manual(values = c("Diff" = "green")) +
theme_minimal() +
theme(legend.position = "none", legend.title = element_blank()) +
theme(axis.text.x = element_text(hjust = 1))
library(tidyverse)
library(ggrepel)
library(RColorBrewer)
library(lubridate)
library(stringr)
library(forcats)
#BASE
url <- "https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/tutorial/datascience2024/matsim_outputs/output-1pct/base/berlin-v6.3.output_trips.csv.gz"
destfile <- "berlin-v6.3.base.output_trips.csv.gz"
download.file(url, destfile)
original_dir <- getwd()
file_dir <- dirname(destfile)
setwd(file_dir)
base_data <- read_delim(gzfile(basename(destfile)))
sample(base_data)
#POLICY
url <- "https://svn.vsp.tu-berlin.de/repos/public-svn/matsim/tutorial/datascience2024/matsim_outputs/output-1pct/policy/berlin-v6.3.output_trips.csv.gz"
destfile <- "berlin-v6.3.policy.output_trips.csv.gz"
download.file(url, destfile)
original_dir <- getwd()
file_dir <- dirname(destfile)
setwd(file_dir)
policy_data <- read_delim(gzfile(basename(destfile)))
# Comparing Mode Share for Brandenburg Residents: Base vs. Policy Scenario
mode_share_bb_base <- base_data %>%
select(trip_id, main_mode) %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
count(main_mode) %>%
mutate(share = n / sum(n)) %>%
mutate(scenario = "base") %>%
select(scenario, main_mode, share)
mode_share_bb_policy <- policy_data %>%
select(trip_id, main_mode) %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
count(main_mode) %>%
mutate(share = n / sum(n)) %>%
mutate(scenario = "policy") %>%
select(scenario, main_mode, share)
mode_share_bb_combined <- bind_rows(mode_share_bb_base, mode_share_bb_policy)
ggplot(mode_share_bb_combined, aes(x = main_mode, y = share, fill = scenario)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
labs(title = "Mode Share for Brandenburg Residents: Base vs Policy Scenario",
x = "Mode of Transportation", y = "Share of Trips") +
scale_fill_manual(values = c("base" = "blue", "policy" = "red")) +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1))
# Comparing travel time by main mode
base_data_bb <- base_data %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
mutate(total_trav_time = trav_time + wait_time)
policy_data_bb <- policy_data %>%
filter(grepl("^bb", trip_id, ignore.case = TRUE)) %>%
mutate(total_trav_time = trav_time + wait_time)
mode_base_summary <- base_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(total_trav_time, na.rm = TRUE), .groups = 'drop')
mode_policy_summary <- policy_data_bb %>%
group_by(main_mode) %>%
summarise (avg_travel_time = mean(total_trav_time, na.rm = TRUE), .groups = 'drop')
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy")) %>%
mutate(avg_travel_time_diff = avg_travel_time_policy - avg_travel_time_base)
ggplot(mode_summary_combined, aes(x = main_mode, y = avg_travel_time_diff)) +
geom_col(aes(fill = "Diff"), alpha = 0.7) +
labs(title = "Difference of Average Travel Time for Brandenburg Residents",
x = "Mode of Transportation", y = "Difference of Average Travel Time (seconds) - Policy vs. Base Scenario") +
scale_fill_manual(values = c("Diff" = "green")) +
theme_minimal() +
theme(legend.position = "none", legend.title = element_blank()) +
theme(axis.text.x = element_text(hjust = 1))
mode_summary_combined <- left_join(mode_base_summary, mode_policy_summary,
by = "main_mode",
suffix = c("_base", "_policy")) %>%
mutate(avg_travel_time_diff = avg_travel_time_policy - avg_travel_time_base) %>%
mutate(color_diff = ifelse(avg_travel_time_diff > 0, "Positive", "Negative"))
ggplot(mode_summary_combined, aes(x = main_mode, y = avg_travel_time_diff, fill = color_diff)) +
geom_col(alpha = 0.7) +
labs(title = "Difference of Average Travel Time for Brandenburg Residents",
x = "Mode of Transportation", y = "Difference of Average Travel Time (seconds) - Policy vs. Base Scenario") +
scale_fill_manual(values = c("Positive" = "green", "Negative" = "red")) +
theme_minimal() +
theme(legend.position = "none", legend.title = element_blank()) +
theme(axis.text.x = element_text(hjust = 1))
